
<?php
$canvasSize = 230;
?>
<script> 
	var canvasSize = <?php echo $canvasSize ?>;
</script>
<style>
	.goo{
		width:230px;
		position:relative;
		/*CSSPERSO*/
		height: 85px;

	}
</style>

<div id="real" class="container-frame goo">
<!-- CSSPERSO
	<div class="character-frame">		
		<canvas class="character-amp character-image" id="cvsBACK" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsBODY" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsFACE" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsHAIR" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsCLUP" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsCLDO" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsGUIT" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsARMS" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsCLAR" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsACC1" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsACC2" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
		<canvas class="character-amp character-image" id="cvsX" width=<?php echo $canvasSize ?> height=<?php echo $canvasSize ?>></canvas>
	</div>
-->

<?php 
if(strlen($user->_character->getName()) > 14)
{
	?>
	<div class="character-name character-name-small"><?php echo $user->_character->getName(); ?></div>
	<?php
}
else
{
	?>
	<div class="character-name"><?php echo $user->_character->getName(); ?></div>
	<?php
}
?>

<div class="level-number"><?php echo $user->_character->getLevel(); ?></div>
<div class="money-number"><img class="moneyBar" src="images/money0.png" /><span class="character-money"><?php echo $user->_character->getMoney(); ?></span></div>

<div class="progress-container">
	<progress id="XPBarCharacter" class="XPBarCharacter progressBarCharacter" max="<?php echo $levelPointsSize; ?>" value="<?php echo $user->_character->getXPLvl(); ?>"></progress>										
	<progress id="LifeBarCharacter" class="LifeBarCharacter progressBarCharacter" max="100" value="<?php echo $user->_character->getLife(); ?>"></progress>									
</div>
<img class="heartImgBar" src="images/heart.png" /><div class="life-number"><span class="character-life"><?php echo $user->_character->getLife(); ?></span> / 100</div>
<img class="heartImgBar starImgBar" src="images/xp.png" /><div class="xp-number"><span class="character-xp"><?php echo $user->_character->getXPLvl(); ?></span> / <span class="character-levelPointsSize">
<?php echo $levelPointsSize ?></span>
</div>

</div>

<script src="js/jquery-1.11.2.min.js"></script>   

<script>

	//initCharacterDrawing(); 
	function drawInCanvas(canvasId, imagePath, colorShift)
	{
		//var colorshift = -0.00;
		var cvs = document.getElementById(canvasId);var ctx = cvs.getContext("2d");
		ctx.clearRect(0, 0, canvasSize, canvasSize);
		var img = new Image();
		img.crossOrigin = "anonymous";
		img.onload = function()
		{
			ctx.drawImage(img, 0, 0, canvasSize, canvasSize);
			recolorPants(colorShift, cvs, ctx);
		};

		img.src = imagePath;
	}

	function initCharacterDrawing()
	{
		drawInCanvas("cvsBACK", "<?php echo $user->_character->getBackgroundImageSource(); ?>", 0);
		drawInCanvas("cvsBODY", "<?php echo $user->_character->getCharacterBaseImageSource(); ?>", 0);
		drawInCanvas("cvsFACE", "<?php echo $user->_character->getCharacterBaseFaceImageSource(); ?>", 0);
		drawInCanvas("cvsHAIR", "<?php echo $user->_character->getCharacterBaseHairImageSource(); ?>", 0);
		drawInCanvas("cvsCLUP", "<?php echo $user->_character->getCharacterBaseClothesUpImageSource(); ?>", 0);
		drawInCanvas("cvsCLDO", "<?php echo $user->_character->getCharacterBaseClothesDownImageSource(); ?>", 0);
		drawInCanvas("cvsARMS", "<?php echo $user->_character->getCharacterBaseArmsImageSource(); ?>", 0);
		drawInCanvas("cvsGUIT", "<?php echo $user->_character->getGuitarBaseImageSource(); ?>", 0);
		drawInCanvas("cvsCLAR", "<?php echo $user->_character->getCharacterBaseClothesArmsImageSource(); ?>", 0);
		drawInCanvas("cvsACC1", "<?php echo $user->_character->getCharacterBaseAccess1(); ?>", 0);
		drawInCanvas("cvsACC2", "<?php echo $user->_character->getCharacterBaseAccess2(); ?>", 0);
	}

	

	function recolorPants(colorshift, canvas, ctx) {

		var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);
		var data = imgData.data;

		for (var i = 0; i < data.length; i += 4) {
			red = data[i + 0];
			green = data[i + 1];
			blue = data[i + 2];
			alpha = data[i + 3];

			if (alpha < 200) {
				continue;
			}

			var hsl = rgbToHsl(red, green, blue);
			var hue = hsl.h * 360;

			if (true) {
				var newRgb = hslToRgb(hsl.h + colorshift, hsl.s, hsl.l);
				data[i + 0] = newRgb.r;
				data[i + 1] = newRgb.g;
				data[i + 2] = newRgb.b;
				data[i + 3] = 255;
			}
		}
		ctx.putImageData(imgData, 0, 0);
	}

	function rgbToHsl(r, g, b) {
		r /= 255, g /= 255, b /= 255;
		var max = Math.max(r, g, b),
		min = Math.min(r, g, b);
		var h, s, l = (max + min) / 2;

		if (max == min) {
        h = s = 0; // achromatic
    } else {
    	var d = max - min;
    	s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
    	switch (max) {
    		case r:
    		h = (g - b) / d + (g < b ? 6 : 0);
    		break;
    		case g:
    		h = (b - r) / d + 2;
    		break;
    		case b:
    		h = (r - g) / d + 4;
    		break;
    	}
    	h /= 6;
    }

    return ({
    	h: h,
    	s: s,
    	l: l,
    });
}


function hslToRgb(h, s, l) {
	var r, g, b;

	if (s == 0) {
        r = g = b = l; // achromatic
    } else {
    	function hue2rgb(p, q, t) {
    		if (t < 0) t += 1;
    		if (t > 1) t -= 1;
    		if (t < 1 / 6) return p + (q - p) * 6 * t;
    		if (t < 1 / 2) return q;
    		if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
    		return p;
    	}

    	var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    	var p = 2 * l - q;
    	r = hue2rgb(p, q, h + 1 / 3);
    	g = hue2rgb(p, q, h);
    	b = hue2rgb(p, q, h - 1 / 3);
    }

    return ({
    	r: Math.round(r * 255),
    	g: Math.round(g * 255),
    	b: Math.round(b * 255),
    });
}

</script>



